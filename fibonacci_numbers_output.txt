--------------------------------
Start Of Program
--------------------------------

The value which was entered for N is 5.

N := 5.

--------------------------------

Computing the Nth term of the Fibonacci Sequence using recursion:

fibonacci(5) = fibonacci(3) + fibonacci(4). // recursive case (C = 1)

fibonacci(3) = fibonacci(1) + fibonacci(2). // recursive case (C = 2)

fibonacci(1) = 1. // base case (C = 3)

fibonacci(2) = fibonacci(0) + fibonacci(1). // recursive case (C = 4)

fibonacci(0) = 1. // base case (C = 5)

fibonacci(1) = 1. // base case (C = 6)

fibonacci(4) = fibonacci(2) + fibonacci(3). // recursive case (C = 7)

fibonacci(2) = fibonacci(0) + fibonacci(1). // recursive case (C = 8)

fibonacci(0) = 1. // base case (C = 9)

fibonacci(1) = 1. // base case (C = 10)

fibonacci(3) = fibonacci(1) + fibonacci(2). // recursive case (C = 11)

fibonacci(1) = 1. // base case (C = 12)

fibonacci(2) = fibonacci(0) + fibonacci(1). // recursive case (C = 13)

fibonacci(0) = 1. // base case (C = 14)

fibonacci(1) = 1. // base case (C = 15)

A = fibonacci(5) = 8.

The number of times which the recursive Fibonacci Sequence term function was called during this program runtime instance is 15.

--------------------------------

Computing the Nth term of the Fibonacci Sequence using iteration:

fibonacci(0) = 1. // i = 0

fibonacci(1) = 1. // i = 1

fibonacci(2) = 2 = fibonacci(0) + fibonacci(1) = 1 + 1. // i = 2

fibonacci(3) = 3 = fibonacci(1) + fibonacci(2) = 1 + 2. // i = 3

fibonacci(4) = 5 = fibonacci(2) + fibonacci(3) = 2 + 3. // i = 4

fibonacci(5) = 8 = fibonacci(3) + fibonacci(4) = 3 + 5. // i = 5

B = fibonacci(5) = 8.

--------------------------------
End Of Program
--------------------------------