--------------------------------
Start Of Program
--------------------------------

The following statements describe the data capacities of various primitive C++ data types:

sizeof(int) = 4 byte(s).

sizeof(unsigned long long int) = 8 byte(s).

sizeof(bool) = 1 byte(s).

sizeof(char) = 1 byte(s).

sizeof(float) = 4 byte(s).

sizeof(double) = 8 byte(s).

sizeof(long double) = 16 byte(s).

--------------------------------

The value which was entered for N is 7.

N := 7.

--------------------------------

Computing the first N Golden Ratio approximations by dividing adjacent terms of the Fibonacci Sequence:

golden_ratio_approximation(1) = fibonacci(1) / fibonacci(0).
golden_ratio_approximation(1) = 1 / 1.
golden_ratio_approximation(1) = 1.
G = golden_ratio_approximation(1) = 1.

golden_ratio_approximation(2) = fibonacci(2) / fibonacci(1).
golden_ratio_approximation(2) = 2 / 1.
golden_ratio_approximation(2) = 2.
G = golden_ratio_approximation(2) = 2.

golden_ratio_approximation(3) = fibonacci(3) / fibonacci(2).
golden_ratio_approximation(3) = 3 / 2.
golden_ratio_approximation(3) = 1.5.
G = golden_ratio_approximation(3) = 1.5.

golden_ratio_approximation(4) = fibonacci(4) / fibonacci(3).
golden_ratio_approximation(4) = 5 / 3.
golden_ratio_approximation(4) = 1.666666666666666666630526594250483185533084906637668609619140625.
G = golden_ratio_approximation(4) = 1.6666666666666667406815349750104360282421112060546875.

golden_ratio_approximation(5) = fibonacci(5) / fibonacci(4).
golden_ratio_approximation(5) = 8 / 5.
golden_ratio_approximation(5) = 1.600000000000000000021684043449710088680149056017398834228515625.
G = golden_ratio_approximation(5) = 1.600000000000000088817841970012523233890533447265625.

golden_ratio_approximation(6) = fibonacci(6) / fibonacci(5).
golden_ratio_approximation(6) = 13 / 8.
golden_ratio_approximation(6) = 1.625.
G = golden_ratio_approximation(6) = 1.625.

--------------------------------
End Of Program
--------------------------------